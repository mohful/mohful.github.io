{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","mortgage","setMortgage","months","setMonths","rate","setRate","result","setResult","align","style","paddingTop","TextField","label","variant","type","onChange","e","target","value","Button","color","onClick","Math","pow","toFixed","calculate","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAuDeA,MAnDf,WAEI,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KAOA,OACE,mCACA,sBAAKC,MAAQ,SAASC,MAAO,CAACC,WAAW,OAAzC,UACE,iCACE,cAACC,EAAA,EAAD,CACEC,MAAM,kBACNC,QAAU,WACVC,KAAO,SACPC,SAAY,SAAAC,GAAC,OAAIf,EAAYe,EAAEC,OAAOC,UAExC,cAACP,EAAA,EAAD,CACEC,MAAM,SACNC,QAAU,WACVC,KAAO,SACPC,SAAY,SAAAC,GAAC,OAAIb,EAAUa,EAAEC,OAAOC,UAEtC,cAACP,EAAA,EAAD,CACEC,MAAM,gBACNC,QAAU,WACVC,KAAO,SACPC,SAAY,SAAAC,GAAC,OAAIX,EAAQW,EAAEC,OAAOC,MAAQ,QAE5C,uBACA,uBACA,cAACC,EAAA,EAAD,CACEN,QAAU,YACVO,MAAQ,UACRC,QAAW,YAhCD,WAChB,IAAMf,EAAUN,GAAYI,EAAO,IAAMkB,KAAKC,IAAI,EAAInB,EAAO,GAAIF,IAAYoB,KAAKC,IAAI,EAAInB,EAAO,GAAIF,GAAU,GAC/GK,EAAUD,EAAOkB,QAAQ,IA8BDC,IAHpB,uBAMA,0BAEF,uBACA,sBAAKhB,MAAO,CAACiB,SAAS,QAAtB,cAAiCpB,WCrC1BqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c111bdb.chunk.js","sourcesContent":["import { TextField, Button } from '@material-ui/core'\nimport React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n    const [mortgage, setMortgage] = useState();\n    const [months, setMonths] = useState();\n    const [rate, setRate] = useState();\n    const [result, setResult] = useState();\n\n    const calculate = () => {\n      const result = (mortgage * (rate / 12) * Math.pow(1 + rate / 12, months)) / (Math.pow(1 + rate / 12, months) - 1);\n      setResult(result.toFixed(2));\n    };\n\n    return (\n      <>\n      <div align = \"center\" style={{paddingTop:\"20%\"}}>\n        <form>\n          <TextField \n            label=\"Mortgage Amount\" \n            variant = \"outlined\"\n            type = \"number\"\n            onChange = {e => setMortgage(e.target.value)}\n          />\n          <TextField \n            label=\"Months\" \n            variant = \"outlined\"\n            type = \"number\"\n            onChange = {e => setMonths(e.target.value)}\n          />\n          <TextField \n            label=\"Interest Rate\" \n            variant = \"outlined\"\n            type = \"number\"\n            onChange = {e => setRate(e.target.value / 100)}\n          />\n          <br />\n          <br />\n          <Button \n            variant = \"contained\"\n            color = \"primary\"\n            onClick = {() => {calculate()}} >\n            Calculate\n          </Button>\n          <br />\n        </form>\n        <br />\n        <div style={{fontSize:\"20px\"}}>${result}</div>\n        </div>\n      </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}